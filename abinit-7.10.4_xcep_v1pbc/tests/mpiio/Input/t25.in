#Test the triple parallelisation. 
#We cannot check the distribution npband*npfft*npkpt=2*2*2=8 processors, 
#this number being not allowed in the test procedure.
#Here, we only test the parallelisation over bands and spins:
#npband*npfft*npkpt=2*1*2=4 processors.
#In addition, we also test here various features of bandfft-kpt parallelisation
#In particular, the bandpp, istwfk=2 and wfoptalg=14 variables.

 bandpp 2
 istwfk 2
 npband 2 npkpt 2 npfft 1

 ngfft 18 18 18
 ngfftdg 36 36 36

 occopt 1 
 kptopt 0
 nkpt 1 toldfe 1.0d-10 nsppol 2 ixc 1
 iscf 7

 ecut 15. pawecutdg 50
 diemac 12.0d0  enunit 2
 nstep 5
 acell 3*7.0
 rprim 0.0 0.5 0.5
       0.5 0.0 0.5
       0.5 0.5 0.0
 xred 0.0  0.0  0.0
      0.22 0.22 0.22
 znucl 6
 nband 12 occ 4*2 8*0
 ntypat 1 typat 1 1  natom 2

 paral_kgb 1



#Obsolete entries (now set by default)
fftalg 401 
#wfoptalg 14 fft_opt_lob 2 nloalg 4
#iprcch 0 intxc 0
#pawmixdg 1


# add to conserve old < 6.7.2 behavior for calculating forces at each SCF step
 optforces 1

#%%<BEGIN TEST_INFO>
#%% [setup]
#%% executable = abinit
#%% [files]
#%% psp_files = 6c_lda.paw
#%% [paral_info]
#%% nprocs_to_test = 4
#%% max_nprocs = 4
#%% [NCPU_4]
#%% files_to_test = t25_MPI4.out, tolnlines=   16,   tolabs=  5.0e-8,      tolrel= 2.0e-2
#%% [extra_info]
#%% keywords = PAW
#%% authors = 
#%% description = 
#%%    C-diamond, Bulk, 2 atoms, paral_kgb, with PAW.
#%%    Test the triple parallelisation.
#%%    We cannot check the distribution npband*npfft*npkpt=2*2*2=8 processors,
#%%    this number being not allowed in the test procedure.
#%%    Here, we only test the parallelisation over bands and spins:
#%%    npband*npfft*npkpt=2*1*2=4 processors.
#%%    In addition, we also test here various features of bandfft-kpt parallelisation
#%%    In particular, the bandpp, istwfk=2 and wfoptalg=14 variables.
#%%<END TEST_INFO>
