# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







pkgdatadir = $(datadir)/bigdft
pkgincludedir = $(includedir)/bigdft
pkglibdir = $(libdir)/bigdft
pkglibexecdir = $(libexecdir)/bigdft
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = $(am__EXEEXT_2)
noinst_PROGRAMS = $(am__EXEEXT_3)
#am__append_1 = $(gir_DATA) $(typelibs_DATA)
subdir = src
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/bigdft-tool.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/m4/defs.m4 \
	$(top_srcdir)/config/m4/flush.m4 \
	$(top_srcdir)/config/m4/fortran.m4 \
	$(top_srcdir)/config/m4/pic.m4 $(top_srcdir)/config/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = bigdft-tool
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(dynlibdir)" \
	"$(DESTDIR)$(girdir)" "$(DESTDIR)$(moduledir)" \
	"$(DESTDIR)$(typelibsdir)"
LIBRARIES = $(lib_LIBRARIES) $(noinst_LIBRARIES)
ARFLAGS = cru
libbigdft_1_a_AR = $(AR) $(ARFLAGS)
libbigdft_1_a_LIBADD =
am_libbigdft_1_a_OBJECTS =
libbigdft_1_a_OBJECTS = $(am_libbigdft_1_a_OBJECTS)
libmain_a_AR = $(AR) $(ARFLAGS)
libmain_a_LIBADD =
am__libmain_a_SOURCES_DIST = posfiles.c input_variables_description.c \
	init/atoms_yaml.c init/atoms_yaml.h init/atoms.f90 \
	init/projectors.f90 init/kswfn.f90 init/ionicpot.f90 \
	init/gridmanipulation.f90 init/gauprod.f90 init/denspotd.f90 \
	init/logrid.f90 init/logrid_per.f90 init/inputguess.f90 \
	init/gautowav.f90 init/eleconf.f90 init/pspconf.f90 \
	init/locreg_init.f90 init/sysprop.f90 init/wavefunctions.f90 \
	init/gaussians_old.f90 init/wfn_init.f90 wfn_opt/precond.f90 \
	wfn_opt/orthogonality.f90 wfn_opt/diis.f90 wfn_opt/applyh.f90 \
	wfn_opt/potential.f90 wfn_opt/exctX.f90 wfn_opt/exctX_op2p.f90 \
	wfn_opt/sic.f90 wfn_opt/precond_per_optim.f90 \
	wfn_opt/precond_hyb.f90 wfn_opt/precond_slab.f90 \
	wfn_opt/kernel_per_optim.f90 wfn_opt/kernel_slab_simple.f90 \
	wfn_opt/coupling_matrix.f90 wavelib/etsf_fake.f90 \
	wavelib/plotting-etsf.f90 wavelib/i-o-etsf.f90 \
	wavelib/transwaves.f90 wavelib/scalprod.f90 \
	wavelib/plotting.f90 wavelib/i-o.f90 wavelib/un-compress.f90 \
	wavelib/gauss_to_daub.f90 wavelib/daubisf.f90 \
	profiling/memoryestimator.f90 linear/cleanup.f90 \
	linear/nullify.f90 linear/filterModule.f90 \
	linear/communicatetypes.f90 linear/misc.f90 \
	linear/getLocBasis.f90 linear/convolutions_aux.f90 \
	linear/convolutions.f90 linear/precondLinear.f90 \
	linear/psitolocReg.f90 linear/locReg_orbitals.f90 \
	linear/linearScaling.f90 linear/energyAndForces.f90 \
	linear/initAndUtils.f90 linear/sumrhoLinear.f90 \
	linear/inputguessLinear.f90 linear/orthonormality.f90 \
	linear/orbitalOptimization.f90 linear/mixdiis.f90 \
	linear/copyTypes.f90 linear/de-allocate.f90 \
	linear/derivativeBasis.f90 linear/parallelLinAlg.f90 \
	linear/locReg_linear.f90 linear/communicatePotential.f90 \
	linear/hpsiortho_linear.f90 linear/init_collective_comms.f90 \
	linear/optimize_coeffs.f90 linear/foe.f90 linear/chebyshev.f90 \
	linear/communications_onesided.f90 linear/sparse_matrices.f90 \
	cluster.f90 init.f90 initialization.f90 input_variables.f90 \
	input_variables_old.f90 sumrho.f90 hpsiortho.f90 forces.f90 \
	tail.f90 restart.f90 lbfgs.f90 geometry.f90 davidson.f90 \
	ConstrainedDavidson.f90 pdos.f90 sdcg.f90 bfgs.f90 \
	lanczos_interface.f90 lanczos_base.f90 lanczos.f90 \
	scfloop_API.f90 esatto.f90 tddft.f90 output.f90 external.f90 \
	images.f90
am__objects_1 = posfiles.$(OBJEXT) \
	input_variables_description.$(OBJEXT) atoms_yaml.$(OBJEXT)
am__objects_2 = etsf_fake.$(OBJEXT)
#am__objects_2 = plotting-etsf.$(OBJEXT) \
#	i-o-etsf.$(OBJEXT)
am__objects_3 = atoms.$(OBJEXT) projectors.$(OBJEXT) kswfn.$(OBJEXT) \
	ionicpot.$(OBJEXT) gridmanipulation.$(OBJEXT) \
	gauprod.$(OBJEXT) denspotd.$(OBJEXT) logrid.$(OBJEXT) \
	logrid_per.$(OBJEXT) inputguess.$(OBJEXT) gautowav.$(OBJEXT) \
	eleconf.$(OBJEXT) pspconf.$(OBJEXT) locreg_init.$(OBJEXT) \
	sysprop.$(OBJEXT) wavefunctions.$(OBJEXT) \
	gaussians_old.$(OBJEXT) wfn_init.$(OBJEXT) precond.$(OBJEXT) \
	orthogonality.$(OBJEXT) diis.$(OBJEXT) applyh.$(OBJEXT) \
	potential.$(OBJEXT) exctX.$(OBJEXT) exctX_op2p.$(OBJEXT) \
	sic.$(OBJEXT) precond_per_optim.$(OBJEXT) \
	precond_hyb.$(OBJEXT) precond_slab.$(OBJEXT) \
	kernel_per_optim.$(OBJEXT) kernel_slab_simple.$(OBJEXT) \
	coupling_matrix.$(OBJEXT) $(am__objects_2) \
	transwaves.$(OBJEXT) scalprod.$(OBJEXT) plotting.$(OBJEXT) \
	i-o.$(OBJEXT) un-compress.$(OBJEXT) gauss_to_daub.$(OBJEXT) \
	daubisf.$(OBJEXT) memoryestimator.$(OBJEXT) cleanup.$(OBJEXT) \
	nullify.$(OBJEXT) filterModule.$(OBJEXT) \
	communicatetypes.$(OBJEXT) misc.$(OBJEXT) \
	getLocBasis.$(OBJEXT) convolutions_aux.$(OBJEXT) \
	convolutions.$(OBJEXT) precondLinear.$(OBJEXT) \
	psitolocReg.$(OBJEXT) locReg_orbitals.$(OBJEXT) \
	linearScaling.$(OBJEXT) energyAndForces.$(OBJEXT) \
	initAndUtils.$(OBJEXT) sumrhoLinear.$(OBJEXT) \
	inputguessLinear.$(OBJEXT) orthonormality.$(OBJEXT) \
	orbitalOptimization.$(OBJEXT) mixdiis.$(OBJEXT) \
	copyTypes.$(OBJEXT) de-allocate.$(OBJEXT) \
	derivativeBasis.$(OBJEXT) parallelLinAlg.$(OBJEXT) \
	locReg_linear.$(OBJEXT) communicatePotential.$(OBJEXT) \
	hpsiortho_linear.$(OBJEXT) init_collective_comms.$(OBJEXT) \
	optimize_coeffs.$(OBJEXT) foe.$(OBJEXT) chebyshev.$(OBJEXT) \
	communications_onesided.$(OBJEXT) sparse_matrices.$(OBJEXT)
am__objects_4 = cluster.$(OBJEXT) init.$(OBJEXT) \
	initialization.$(OBJEXT) input_variables.$(OBJEXT) \
	input_variables_old.$(OBJEXT) sumrho.$(OBJEXT) \
	hpsiortho.$(OBJEXT) forces.$(OBJEXT) tail.$(OBJEXT) \
	restart.$(OBJEXT) lbfgs.$(OBJEXT) geometry.$(OBJEXT) \
	davidson.$(OBJEXT) ConstrainedDavidson.$(OBJEXT) \
	pdos.$(OBJEXT) sdcg.$(OBJEXT) bfgs.$(OBJEXT) \
	lanczos_interface.$(OBJEXT) lanczos_base.$(OBJEXT) \
	lanczos.$(OBJEXT) scfloop_API.$(OBJEXT) esatto.$(OBJEXT) \
	tddft.$(OBJEXT) output.$(OBJEXT) external.$(OBJEXT) \
	images.$(OBJEXT)
am_libmain_a_OBJECTS = $(am__objects_1) $(am__objects_3) \
	$(am__objects_4)
libmain_a_OBJECTS = $(am_libmain_a_OBJECTS)
#am__EXEEXT_1 = global$(EXEEXT)
#am__EXEEXT_2 = bigdft$(EXEEXT) memguess$(EXEEXT) \
#	splsad$(EXEEXT) NEB$(EXEEXT) \
#	frequencies$(EXEEXT) MDanalysis$(EXEEXT) \
#	$(am__EXEEXT_1) bart$(EXEEXT) \
#	abscalc$(EXEEXT) BigDFT2Wannier$(EXEEXT) \
#	WaCo$(EXEEXT) NEB_images$(EXEEXT)
#am__EXEEXT_3 = test_forces$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_BigDFT2Wannier_OBJECTS = BigDFT2Wannier.$(OBJEXT)
BigDFT2Wannier_OBJECTS = $(am_BigDFT2Wannier_OBJECTS)
#am__DEPENDENCIES_1 = libbigdft-1.so.7
am__DEPENDENCIES_2 = libbigdft-1.a \
	$(out_static_library)
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
BigDFT2Wannier_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_MDanalysis_OBJECTS = distances.$(OBJEXT)
MDanalysis_OBJECTS = $(am_MDanalysis_OBJECTS)
MDanalysis_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_NEB_OBJECTS = NEB.$(OBJEXT)
NEB_OBJECTS = $(am_NEB_OBJECTS)
NEB_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_NEB_images_OBJECTS = BigDFT.$(OBJEXT)
NEB_images_OBJECTS = $(am_NEB_images_OBJECTS)
NEB_images_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_WaCo_OBJECTS = WaCo.$(OBJEXT)
WaCo_OBJECTS = $(am_WaCo_OBJECTS)
WaCo_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_abscalc_OBJECTS = abscalc-abscalc.$(OBJEXT)
abscalc_OBJECTS = $(am_abscalc_OBJECTS)
abscalc_DEPENDENCIES = $(am__DEPENDENCIES_2)
abscalc_LINK = $(FCLD) $(abscalc_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bart_OBJECTS = bart-art.$(OBJEXT)
bart_OBJECTS = $(am_bart_OBJECTS)
bart_DEPENDENCIES = art/libart.a $(am__DEPENDENCIES_2)
bart_LINK = $(FCLD) $(bart_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bigdft_OBJECTS = BigDFT.$(OBJEXT)
bigdft_OBJECTS = $(am_bigdft_OBJECTS)
bigdft_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_frequencies_OBJECTS = frequencies.$(OBJEXT)
frequencies_OBJECTS = $(am_frequencies_OBJECTS)
frequencies_DEPENDENCIES = $(am__DEPENDENCIES_2)
global_OBJECTS = $(am_global_OBJECTS)
global_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_memguess_OBJECTS = memguess.$(OBJEXT) MPIfake.$(OBJEXT)
memguess_OBJECTS = $(am_memguess_OBJECTS)
memguess_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_splsad_OBJECTS = splinedsaddle.$(OBJEXT)
splsad_OBJECTS = $(am_splsad_OBJECTS)
splsad_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_forces_OBJECTS = test_forces.$(OBJEXT)
test_forces_OBJECTS = $(am_test_forces_OBJECTS)
test_forces_DEPENDENCIES = $(am__DEPENDENCIES_2)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(libbigdft_1_a_SOURCES) $(libmain_a_SOURCES) \
	$(BigDFT2Wannier_SOURCES) $(MDanalysis_SOURCES) $(NEB_SOURCES) \
	$(NEB_images_SOURCES) $(WaCo_SOURCES) $(abscalc_SOURCES) \
	$(bart_SOURCES) $(bigdft_SOURCES) $(frequencies_SOURCES) \
	$(global_SOURCES) $(memguess_SOURCES) $(splsad_SOURCES) \
	$(test_forces_SOURCES)
DIST_SOURCES = $(libbigdft_1_a_SOURCES) $(am__libmain_a_SOURCES_DIST) \
	$(BigDFT2Wannier_SOURCES) $(MDanalysis_SOURCES) $(NEB_SOURCES) \
	$(NEB_images_SOURCES) $(WaCo_SOURCES) $(abscalc_SOURCES) \
	$(bart_SOURCES) $(bigdft_SOURCES) $(frequencies_SOURCES) \
	$(global_SOURCES) $(memguess_SOURCES) $(splsad_SOURCES) \
	$(test_forces_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(dynlib_DATA) $(gir_DATA) $(module_DATA) $(typelibs_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = modules convolutions xcPSolver convolutions-c CUDA \
	OpenCL bindings art tools tools/bader
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/config/missing --run autoconf
AUTOHEADER = ${SHELL} /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/config/missing --run autoheader
AUTOMAKE = ${SHELL} /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/config/missing --run automake-1.11
AWK = gawk
BIGDFT_MAJOR_VERSION = 1
BIGDFT_MICRO_VERSION = 0
BIGDFT_MINOR_VERSION = 7
BIGDFT_NANO_VERSION = 93
BUILD_BINDINGS_END = */
BUILD_BINDINGS_START = /*
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIG_ARGS =  '--prefix=/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports' '--bindir=/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/bin' '--libdir=/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib' '--program-suffix=-abinit' '--disable-binaries' '--disable-bindings' '--enable-libbigdft' '--without-archives' '--with-moduledir=/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include' '--enable-internal-libyaml' '--disable-shared' '--disable-internal-libxc' '--with-libxc-incs=-I/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include' '--with-libxc-libs=-L/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib -lxc' 'CC=gcc' 'CFLAGS=-g -O2' 'LDFLAGS= ' 'LIBS=' 'CPPFLAGS= ' 'CXX=g++' 'CXXFLAGS=' 'FC=gfortran' 'FCFLAGS=-ffree-form -g -ffree-line-length-none   -O2 -mtune=native -march=native -g -O2 ' 'F77=gfortran' 'FFLAGS=-ffixed-form -g -ffree-line-length-none   -O2 -mtune=native -march=native -g -O2 ' 'CPP=gcc -E'
CPP = gcc -E
CPPFLAGS =  
CUDA_INCLUDE = 
CUDA_INCLUDE_PATH = 
CUDA_PATH = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DGEMMSY_CPPFLAGS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = 
EXEEXT = 
F77 = gfortran
F90_1D_POINTER_SHIFT = 0
F90_1D_POINTER_SIZE = 6
F90_2D_POINTER_SHIFT = 0
F90_2D_POINTER_SIZE = 9
F90_3D_POINTER_SHIFT = 0
F90_3D_POINTER_SIZE = 12
F90_4D_POINTER_SHIFT = 0
F90_4D_POINTER_SIZE = 15
F90_5D_POINTER_SHIFT = 0
F90_5D_POINTER_SIZE = 18
FC = gfortran
FCDEFS = -D
FCFLAGS = -ffree-form -g -ffree-line-length-none   -O2 -mtune=native -march=native -g -O2 
FCFLAGS_f90 = 
FCLIBS =  -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L. -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../.. -lgfortran -lm -lquadmath
FFLAGS = -ffixed-form -g -ffree-line-length-none   -O2 -mtune=native -march=native -g -O2 
GDBUS_CFLAGS = 
GDBUS_LIBS = 
GLIB_CFLAGS = 
GLIB_END_FALSE = 
GLIB_END_TRUE = */
GLIB_FALSE = 
GLIB_LIBS = 
GLIB_TRUE = /*
GOBJECT_INTROSPECTION_CFLAGS = 
GOBJECT_INTROSPECTION_LIBS = 
GREP = 
G_IR_COMPILER = 
G_IR_SCANNER = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =   -L$(top_builddir)/libABINIT/src 
LIBABINIT_INCLUDE = -I$(top_builddir)/libABINIT/src
LIBETSFIO_INCLUDE = 
LIBOBJS = 
LIBS = -lrt 
LIBSGPU_INCLUDE = 
LIBS_SHORT_DEPS = -labinit -L/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib -lxc     -llapack -lblas  $(top_builddir)/yaml-0.1.4/src/.libs/libyaml.a   
LIBXC_CFLAGS = 
LIBXC_INCLUDE = -I/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include
LIBXC_LIBS = -L/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib -lxc
LIB_ARCHIVE_CFLAGS = 
LIB_ARCHIVE_LIBS = 
LIB_YAML_CFLAGS = -I$(top_srcdir)/yaml-0.1.4/include
LIB_YAML_LIBS = $(top_builddir)/yaml-0.1.4/src/.libs/libyaml.a
LINALG_LIBS = -llapack -lblas
LTLIBOBJS = 
MAKEINFO = ${SHELL} /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/config/missing --run makeinfo
MEMORY_LIMIT = 0
MKDIR_P = /usr/bin/mkdir -p
MODULE_EXT = mod
MPI_INCLUDE = -I$(top_builddir)/src/modules
MPI_LDFLAGS = 
MPI_LIBS = 
NVCC = 
NVCC_FLAGS = 
OBJEXT = o
OCL_INCLUDE = 
OCL_INCLUDE_PATH = 
PACKAGE = bigdft
PACKAGE_BUGREPORT = Damien.Caliste@cea.fr
PACKAGE_NAME = BigDFT - DFT over wavelets
PACKAGE_STRING = BigDFT - DFT over wavelets 1.7.0.93
PACKAGE_TARNAME = bigdft
PACKAGE_URL = 
PACKAGE_VERSION = 1.7.0.93
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.7.0.93
abs_builddir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/src
abs_srcdir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/src
abs_top_builddir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93
abs_top_srcdir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_F77 = 
ac_ct_FC = 
ac_have_doxygen = yes
ac_have_pdflatex = yes
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
girdir = 
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/sources/bigdft-1.7.0.93/config/install-sh
libdir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
moduledir = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports
program_transform_name = s&$$&-abinit&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libxc-2.0.x S_GPU yaml-0.1.4
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
typelibsdir = 

# Main targets.
# ------------
dynlibdir = $(libdir)
bin_SCRIPTS = $(scripts_sources)
lib_LIBRARIES = $(lib_bigdft)
module_DATA = $(mod_bigdft)
dynlib_DATA = $(bigdft_dynamic_library)

# Sub-directories.
# ---------------
SUBDIRS = \
	modules \
	convolutions \
	xcPSolver \
	$(sub_dirs_libconfig) \
	CUDA \
	OpenCL \
	bindings \
	art \
	$(sub_dirs_bin)

EXTRA_DIST = \
	wavelib/intots.inc \
	wavelib/recs16.inc \
	wavelib/sym_16.inc \
	init/pspconf.in.f90 \
	NEB_driver.sh \
	input_variables_definition.yaml


# Build targets, binaries and libraries.
# -------------
noinst_LIBRARIES = libmain.a
# put all subs
subs_static_library = \
	modules/libmodules.a \
	CUDA/libCUDA.a \
	convolutions/libconvolutions.a \
	xcPSolver/libxcPSolver.a \
	OpenCL/libOpenCL.a \
	bindings/libbindings.a

out_static_library = \
	$(top_builddir)/PSolver/src/libPSolver-1.a \
	$(top_builddir)/wrappers/libwrappers.a \
	$(top_builddir)/flib/src/libflib.a

bigdft_dynamic_library = 
#bigdft_dynamic_library = libbigdft-1.so.7.0.0
bigdft_soname_library = 
#bigdft_soname_library = libbigdft-1.so.7
bigdft_library = libbigdft-1.a $(out_static_library) -labinit -L/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib -lxc     -llapack -lblas  $(top_builddir)/yaml-0.1.4/src/.libs/libyaml.a   
#bigdft_library = $(bigdft_soname_library)
#AM_LDFLAGS = -Wl,-rpath=$(DESTDIR)$(dynlibdir)
#lib_bigdft = 
lib_bigdft = libbigdft-1.a
binaries_sources = 
#binaries_sources = bigdft memguess splsad NEB frequencies MDanalysis $(minima_hopping_sources) bart abscalc BigDFT2Wannier WaCo NEB_images
local_binaries = 
#local_binaries = test_forces
scripts_sources = 
#scripts_sources = NEB_driver.sh bigdft-tool
sub_dirs_bin = 
#sub_dirs_bin = tools tools/bader
sub_dirs_libconfig = 

# Additional sources.
# ------------------
#sub_dirs_libconfig = convolutions-c
etsf_files = wavelib/etsf_fake.f90
#etsf_files = wavelib/plotting-etsf.f90 \
#	wavelib/i-o-etsf.f90

minima_hopping_sources = 

# Specific treatment for global (not distributed).
#minima_hopping_sources = global
global_SOURCES = # Should be global.f90, but see below.
global_LDADD = $(bigdft_library) -llapack -lblas
# Hack to avoid global.f90 inclusion into make dist.
am_global_OBJECTS = global.$(OBJEXT)
global_LINK = $(FCLD) $(FCFLAGS) $(AM_CFLAGS) $(CFLAGS) $(global_LDFLAGS) \
	$(LDFLAGS) -o $@

AM_FCFLAGS = -I. -I$(top_builddir)/includes -I$(srcdir)/wavelib \
	-I$(top_builddir)/libABINIT/src -I/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include \
	  \
	-I$(top_builddir)/src/modules

AM_CPPFLAGS =   -I$(srcdir)/modules -Imodules
#AM_CFLAGS = -Wall -Werror -Wno-strict-aliasing   -Wno-deprecated-declarations -Wno-cpp
AM_CFLAGS =  -I$(top_srcdir)/yaml-0.1.4/include

#objects which depends from module_types
high_level = cluster.f90 \
	init.f90 \
	initialization.f90 \
	input_variables.f90 \
	input_variables_old.f90 \
	sumrho.f90 \
	hpsiortho.f90 \
	forces.f90 \
	tail.f90 \
	restart.f90 \
	lbfgs.f90 \
	geometry.f90 \
	davidson.f90 \
	ConstrainedDavidson.f90 \
	pdos.f90 \
	sdcg.f90 \
	bfgs.f90 \
	lanczos_interface.f90 \
	lanczos_base.f90 \
	lanczos.f90 \
	scfloop_API.f90 \
	esatto.f90 \
	tddft.f90 \
	output.f90 \
	external.f90 \
	images.f90


#objects which can be compiled only with module_base
low_level = \
	init/atoms.f90 \
	init/projectors.f90  \
	init/kswfn.f90 \
	init/ionicpot.f90 \
	init/gridmanipulation.f90 \
	init/gauprod.f90 \
	init/denspotd.f90 \
	init/logrid.f90 \
	init/logrid_per.f90 \
	init/inputguess.f90 \
	init/gautowav.f90 \
	init/eleconf.f90 \
	init/pspconf.f90 \
	init/locreg_init.f90 \
	init/sysprop.f90 \
	init/wavefunctions.f90 \
	init/gaussians_old.f90 \
	init/wfn_init.f90 \
	wfn_opt/precond.f90 \
	wfn_opt/orthogonality.f90 \
	wfn_opt/diis.f90 \
	wfn_opt/applyh.f90 \
	wfn_opt/potential.f90 \
	wfn_opt/exctX.f90 \
	wfn_opt/exctX_op2p.f90 \
	wfn_opt/sic.f90 \
	wfn_opt/precond_per_optim.f90 \
	wfn_opt/precond_hyb.f90 \
	wfn_opt/precond_slab.f90 \
	wfn_opt/kernel_per_optim.f90 \
	wfn_opt/kernel_slab_simple.f90 \
	wfn_opt/coupling_matrix.f90 \
	$(etsf_files) \
	wavelib/transwaves.f90 \
	wavelib/scalprod.f90 \
	wavelib/plotting.f90 \
	wavelib/i-o.f90 \
	wavelib/un-compress.f90 \
	wavelib/gauss_to_daub.f90 \
	wavelib/daubisf.f90 \
	profiling/memoryestimator.f90 \
	linear/cleanup.f90 \
	linear/nullify.f90 \
	linear/filterModule.f90 \
	linear/communicatetypes.f90 \
	linear/misc.f90 \
	linear/getLocBasis.f90 \
	linear/convolutions_aux.f90 \
	linear/convolutions.f90 \
	linear/precondLinear.f90 \
	linear/psitolocReg.f90 \
	linear/locReg_orbitals.f90 \
	linear/linearScaling.f90 \
	linear/energyAndForces.f90 \
	linear/initAndUtils.f90 \
	linear/sumrhoLinear.f90 \
	linear/inputguessLinear.f90 \
	linear/orthonormality.f90 \
	linear/orbitalOptimization.f90 \
	linear/mixdiis.f90 \
	linear/copyTypes.f90 \
	linear/de-allocate.f90 \
	linear/derivativeBasis.f90 \
	linear/parallelLinAlg.f90 \
	linear/locReg_linear.f90 \
	linear/communicatePotential.f90 \
	linear/hpsiortho_linear.f90 \
	linear/init_collective_comms.f90 \
	linear/optimize_coeffs.f90 \
	linear/foe.f90 \
	linear/chebyshev.f90 \
	linear/communications_onesided.f90 \
	linear/sparse_matrices.f90


# C objects
c_level = posfiles.c \
	input_variables_description.c \
	init/atoms_yaml.c init/atoms_yaml.h

libmain_a_SOURCES = \
	$(c_level) \
	$(low_level) \
	$(high_level)

libbigdft_1_a_SOURCES = 

#obsolete dependency $(bin_PROGRAMS) $(noinst_PROGRAMS): libbigdft-1.a libdft_common.a
bigdft_SOURCES = BigDFT.f90
bigdft_LDADD = $(bigdft_library)
NEB_images_SOURCES = BigDFT.f90
NEB_images_LDADD = $(bigdft_library)
splsad_SOURCES = splinedsaddle.f90
splsad_LDADD = $(bigdft_library) -llapack -lblas

#rism_SOURCES = rism.f90 rismlowlevel.f90
#rism_LDADD = $(bigdft_library)

#sandbox_SOURCES = sandbox.f90
#sandbox_LDADD = $(bigdft_library)

#oneatom_SOURCES = oneatom.f90
#oneatom_LDADD = $(bigdft_library)
BigDFT2Wannier_SOURCES = BigDFT2Wannier.f90
BigDFT2Wannier_LDADD = $(bigdft_library) -llapack -lblas
WaCo_SOURCES = WaCo.f90
WaCo_LDADD = $(bigdft_library) -llapack -lblas
MDanalysis_SOURCES = distances.f90
MDanalysis_LDADD = $(bigdft_library)
abscalc_SOURCES = abscalc.f90
abscalc_FCFLAGS = -I. -I$(top_builddir)/includes -I$(srcdir)/wavelib -I$(top_srcdir)/PSolver/src \
	-I$(top_builddir)/libABINIT/src -I/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include \
	  \
	-I$(top_builddir)/src/modules

abscalc_LDADD = $(bigdft_library) -llapack -lblas
test_forces_SOURCES = test_forces.f90
test_forces_LDADD = $(bigdft_library)
NEB_SOURCES = NEB.f90
NEB_LDADD = $(bigdft_library) -llapack -lblas

#to be adjusted: when the compiler has MPI built-in libraries the linker finds multiple definitions
memguess_SOURCES = memguess.f90 $(top_srcdir)/flib/src/MPIfake.f90
memguess_LDADD = $(bigdft_library) -llapack -lblas
frequencies_SOURCES = frequencies.f90
frequencies_LDADD = $(bigdft_library) -llapack -lblas
bart_SOURCES = art.f90
bart_FCFLAGS = -I. -Iart -I$(top_builddir)/includes -I$(top_builddir)/libABINIT/src -I/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/include
bart_LDADD = art/libart.a $(bigdft_library) -llapack -lblas
CLEANFILES = *.mod bindings_dbus.* introspect libbigdft-1.* \
	input_variables_definition-inc.h $(am__append_1)

# Introspection for Python bindings
# ---------------------------------
#BUILT_GIRSOURCES = BigDFT-1.7.gir
#gir_DATA = $(BUILT_GIRSOURCES)
#typelibs_DATA = $(BUILT_GIRSOURCES:.gir=.typelib)
##additonal_sources = $(srcdir)/bindings/bindings.c \
##		$(srcdir)/bindings/bindings_regions.c \
##		$(srcdir)/bindings/bindings_localfields.c \
##		$(srcdir)/bindings/bindings_wavefunctions.c \
##		$(srcdir)/bindings/bindings_signals.c \
##		$(srcdir)/bindings/bindings_signals_inet.c

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .f90 .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
bigdft-tool: $(top_builddir)/config.status $(srcdir)/bigdft-tool.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libmain.a: $(libmain_a_OBJECTS) $(libmain_a_DEPENDENCIES) $(EXTRA_libmain_a_DEPENDENCIES) 
	-rm -f libmain.a
	$(libmain_a_AR) libmain.a $(libmain_a_OBJECTS) $(libmain_a_LIBADD)
	$(RANLIB) libmain.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
BigDFT2Wannier$(EXEEXT): $(BigDFT2Wannier_OBJECTS) $(BigDFT2Wannier_DEPENDENCIES) $(EXTRA_BigDFT2Wannier_DEPENDENCIES) 
	@rm -f BigDFT2Wannier$(EXEEXT)
	$(FCLINK) $(BigDFT2Wannier_OBJECTS) $(BigDFT2Wannier_LDADD) $(LIBS)
MDanalysis$(EXEEXT): $(MDanalysis_OBJECTS) $(MDanalysis_DEPENDENCIES) $(EXTRA_MDanalysis_DEPENDENCIES) 
	@rm -f MDanalysis$(EXEEXT)
	$(FCLINK) $(MDanalysis_OBJECTS) $(MDanalysis_LDADD) $(LIBS)
NEB$(EXEEXT): $(NEB_OBJECTS) $(NEB_DEPENDENCIES) $(EXTRA_NEB_DEPENDENCIES) 
	@rm -f NEB$(EXEEXT)
	$(FCLINK) $(NEB_OBJECTS) $(NEB_LDADD) $(LIBS)
NEB_images$(EXEEXT): $(NEB_images_OBJECTS) $(NEB_images_DEPENDENCIES) $(EXTRA_NEB_images_DEPENDENCIES) 
	@rm -f NEB_images$(EXEEXT)
	$(FCLINK) $(NEB_images_OBJECTS) $(NEB_images_LDADD) $(LIBS)
WaCo$(EXEEXT): $(WaCo_OBJECTS) $(WaCo_DEPENDENCIES) $(EXTRA_WaCo_DEPENDENCIES) 
	@rm -f WaCo$(EXEEXT)
	$(FCLINK) $(WaCo_OBJECTS) $(WaCo_LDADD) $(LIBS)
abscalc$(EXEEXT): $(abscalc_OBJECTS) $(abscalc_DEPENDENCIES) $(EXTRA_abscalc_DEPENDENCIES) 
	@rm -f abscalc$(EXEEXT)
	$(abscalc_LINK) $(abscalc_OBJECTS) $(abscalc_LDADD) $(LIBS)
bart$(EXEEXT): $(bart_OBJECTS) $(bart_DEPENDENCIES) $(EXTRA_bart_DEPENDENCIES) 
	@rm -f bart$(EXEEXT)
	$(bart_LINK) $(bart_OBJECTS) $(bart_LDADD) $(LIBS)
bigdft$(EXEEXT): $(bigdft_OBJECTS) $(bigdft_DEPENDENCIES) $(EXTRA_bigdft_DEPENDENCIES) 
	@rm -f bigdft$(EXEEXT)
	$(FCLINK) $(bigdft_OBJECTS) $(bigdft_LDADD) $(LIBS)
frequencies$(EXEEXT): $(frequencies_OBJECTS) $(frequencies_DEPENDENCIES) $(EXTRA_frequencies_DEPENDENCIES) 
	@rm -f frequencies$(EXEEXT)
	$(FCLINK) $(frequencies_OBJECTS) $(frequencies_LDADD) $(LIBS)
global$(EXEEXT): $(global_OBJECTS) $(global_DEPENDENCIES) $(EXTRA_global_DEPENDENCIES) 
	@rm -f global$(EXEEXT)
	$(global_LINK) $(global_OBJECTS) $(global_LDADD) $(LIBS)
memguess$(EXEEXT): $(memguess_OBJECTS) $(memguess_DEPENDENCIES) $(EXTRA_memguess_DEPENDENCIES) 
	@rm -f memguess$(EXEEXT)
	$(FCLINK) $(memguess_OBJECTS) $(memguess_LDADD) $(LIBS)
splsad$(EXEEXT): $(splsad_OBJECTS) $(splsad_DEPENDENCIES) $(EXTRA_splsad_DEPENDENCIES) 
	@rm -f splsad$(EXEEXT)
	$(FCLINK) $(splsad_OBJECTS) $(splsad_LDADD) $(LIBS)
test_forces$(EXEEXT): $(test_forces_OBJECTS) $(test_forces_DEPENDENCIES) $(EXTRA_test_forces_DEPENDENCIES) 
	@rm -f test_forces$(EXEEXT)
	$(FCLINK) $(test_forces_OBJECTS) $(test_forces_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/atoms_yaml.Po
include ./$(DEPDIR)/input_variables_description.Po
include ./$(DEPDIR)/posfiles.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

atoms_yaml.o: init/atoms_yaml.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atoms_yaml.o -MD -MP -MF $(DEPDIR)/atoms_yaml.Tpo -c -o atoms_yaml.o `test -f 'init/atoms_yaml.c' || echo '$(srcdir)/'`init/atoms_yaml.c
	$(am__mv) $(DEPDIR)/atoms_yaml.Tpo $(DEPDIR)/atoms_yaml.Po
#	source='init/atoms_yaml.c' object='atoms_yaml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atoms_yaml.o `test -f 'init/atoms_yaml.c' || echo '$(srcdir)/'`init/atoms_yaml.c

atoms_yaml.obj: init/atoms_yaml.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atoms_yaml.obj -MD -MP -MF $(DEPDIR)/atoms_yaml.Tpo -c -o atoms_yaml.obj `if test -f 'init/atoms_yaml.c'; then $(CYGPATH_W) 'init/atoms_yaml.c'; else $(CYGPATH_W) '$(srcdir)/init/atoms_yaml.c'; fi`
	$(am__mv) $(DEPDIR)/atoms_yaml.Tpo $(DEPDIR)/atoms_yaml.Po
#	source='init/atoms_yaml.c' object='atoms_yaml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atoms_yaml.obj `if test -f 'init/atoms_yaml.c'; then $(CYGPATH_W) 'init/atoms_yaml.c'; else $(CYGPATH_W) '$(srcdir)/init/atoms_yaml.c'; fi`

.f90.o:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`

atoms.o: init/atoms.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o atoms.o $(FCFLAGS_f90) `test -f 'init/atoms.f90' || echo '$(srcdir)/'`init/atoms.f90

atoms.obj: init/atoms.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o atoms.obj $(FCFLAGS_f90) `if test -f 'init/atoms.f90'; then $(CYGPATH_W) 'init/atoms.f90'; else $(CYGPATH_W) '$(srcdir)/init/atoms.f90'; fi`

projectors.o: init/projectors.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o projectors.o $(FCFLAGS_f90) `test -f 'init/projectors.f90' || echo '$(srcdir)/'`init/projectors.f90

projectors.obj: init/projectors.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o projectors.obj $(FCFLAGS_f90) `if test -f 'init/projectors.f90'; then $(CYGPATH_W) 'init/projectors.f90'; else $(CYGPATH_W) '$(srcdir)/init/projectors.f90'; fi`

kswfn.o: init/kswfn.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kswfn.o $(FCFLAGS_f90) `test -f 'init/kswfn.f90' || echo '$(srcdir)/'`init/kswfn.f90

kswfn.obj: init/kswfn.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kswfn.obj $(FCFLAGS_f90) `if test -f 'init/kswfn.f90'; then $(CYGPATH_W) 'init/kswfn.f90'; else $(CYGPATH_W) '$(srcdir)/init/kswfn.f90'; fi`

ionicpot.o: init/ionicpot.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o ionicpot.o $(FCFLAGS_f90) `test -f 'init/ionicpot.f90' || echo '$(srcdir)/'`init/ionicpot.f90

ionicpot.obj: init/ionicpot.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o ionicpot.obj $(FCFLAGS_f90) `if test -f 'init/ionicpot.f90'; then $(CYGPATH_W) 'init/ionicpot.f90'; else $(CYGPATH_W) '$(srcdir)/init/ionicpot.f90'; fi`

gridmanipulation.o: init/gridmanipulation.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gridmanipulation.o $(FCFLAGS_f90) `test -f 'init/gridmanipulation.f90' || echo '$(srcdir)/'`init/gridmanipulation.f90

gridmanipulation.obj: init/gridmanipulation.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gridmanipulation.obj $(FCFLAGS_f90) `if test -f 'init/gridmanipulation.f90'; then $(CYGPATH_W) 'init/gridmanipulation.f90'; else $(CYGPATH_W) '$(srcdir)/init/gridmanipulation.f90'; fi`

gauprod.o: init/gauprod.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gauprod.o $(FCFLAGS_f90) `test -f 'init/gauprod.f90' || echo '$(srcdir)/'`init/gauprod.f90

gauprod.obj: init/gauprod.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gauprod.obj $(FCFLAGS_f90) `if test -f 'init/gauprod.f90'; then $(CYGPATH_W) 'init/gauprod.f90'; else $(CYGPATH_W) '$(srcdir)/init/gauprod.f90'; fi`

denspotd.o: init/denspotd.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o denspotd.o $(FCFLAGS_f90) `test -f 'init/denspotd.f90' || echo '$(srcdir)/'`init/denspotd.f90

denspotd.obj: init/denspotd.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o denspotd.obj $(FCFLAGS_f90) `if test -f 'init/denspotd.f90'; then $(CYGPATH_W) 'init/denspotd.f90'; else $(CYGPATH_W) '$(srcdir)/init/denspotd.f90'; fi`

logrid.o: init/logrid.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o logrid.o $(FCFLAGS_f90) `test -f 'init/logrid.f90' || echo '$(srcdir)/'`init/logrid.f90

logrid.obj: init/logrid.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o logrid.obj $(FCFLAGS_f90) `if test -f 'init/logrid.f90'; then $(CYGPATH_W) 'init/logrid.f90'; else $(CYGPATH_W) '$(srcdir)/init/logrid.f90'; fi`

logrid_per.o: init/logrid_per.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o logrid_per.o $(FCFLAGS_f90) `test -f 'init/logrid_per.f90' || echo '$(srcdir)/'`init/logrid_per.f90

logrid_per.obj: init/logrid_per.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o logrid_per.obj $(FCFLAGS_f90) `if test -f 'init/logrid_per.f90'; then $(CYGPATH_W) 'init/logrid_per.f90'; else $(CYGPATH_W) '$(srcdir)/init/logrid_per.f90'; fi`

inputguess.o: init/inputguess.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o inputguess.o $(FCFLAGS_f90) `test -f 'init/inputguess.f90' || echo '$(srcdir)/'`init/inputguess.f90

inputguess.obj: init/inputguess.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o inputguess.obj $(FCFLAGS_f90) `if test -f 'init/inputguess.f90'; then $(CYGPATH_W) 'init/inputguess.f90'; else $(CYGPATH_W) '$(srcdir)/init/inputguess.f90'; fi`

gautowav.o: init/gautowav.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gautowav.o $(FCFLAGS_f90) `test -f 'init/gautowav.f90' || echo '$(srcdir)/'`init/gautowav.f90

gautowav.obj: init/gautowav.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gautowav.obj $(FCFLAGS_f90) `if test -f 'init/gautowav.f90'; then $(CYGPATH_W) 'init/gautowav.f90'; else $(CYGPATH_W) '$(srcdir)/init/gautowav.f90'; fi`

eleconf.o: init/eleconf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o eleconf.o $(FCFLAGS_f90) `test -f 'init/eleconf.f90' || echo '$(srcdir)/'`init/eleconf.f90

eleconf.obj: init/eleconf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o eleconf.obj $(FCFLAGS_f90) `if test -f 'init/eleconf.f90'; then $(CYGPATH_W) 'init/eleconf.f90'; else $(CYGPATH_W) '$(srcdir)/init/eleconf.f90'; fi`

pspconf.o: init/pspconf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o pspconf.o $(FCFLAGS_f90) `test -f 'init/pspconf.f90' || echo '$(srcdir)/'`init/pspconf.f90

pspconf.obj: init/pspconf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o pspconf.obj $(FCFLAGS_f90) `if test -f 'init/pspconf.f90'; then $(CYGPATH_W) 'init/pspconf.f90'; else $(CYGPATH_W) '$(srcdir)/init/pspconf.f90'; fi`

locreg_init.o: init/locreg_init.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o locreg_init.o $(FCFLAGS_f90) `test -f 'init/locreg_init.f90' || echo '$(srcdir)/'`init/locreg_init.f90

locreg_init.obj: init/locreg_init.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o locreg_init.obj $(FCFLAGS_f90) `if test -f 'init/locreg_init.f90'; then $(CYGPATH_W) 'init/locreg_init.f90'; else $(CYGPATH_W) '$(srcdir)/init/locreg_init.f90'; fi`

sysprop.o: init/sysprop.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sysprop.o $(FCFLAGS_f90) `test -f 'init/sysprop.f90' || echo '$(srcdir)/'`init/sysprop.f90

sysprop.obj: init/sysprop.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sysprop.obj $(FCFLAGS_f90) `if test -f 'init/sysprop.f90'; then $(CYGPATH_W) 'init/sysprop.f90'; else $(CYGPATH_W) '$(srcdir)/init/sysprop.f90'; fi`

wavefunctions.o: init/wavefunctions.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o wavefunctions.o $(FCFLAGS_f90) `test -f 'init/wavefunctions.f90' || echo '$(srcdir)/'`init/wavefunctions.f90

wavefunctions.obj: init/wavefunctions.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o wavefunctions.obj $(FCFLAGS_f90) `if test -f 'init/wavefunctions.f90'; then $(CYGPATH_W) 'init/wavefunctions.f90'; else $(CYGPATH_W) '$(srcdir)/init/wavefunctions.f90'; fi`

gaussians_old.o: init/gaussians_old.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gaussians_old.o $(FCFLAGS_f90) `test -f 'init/gaussians_old.f90' || echo '$(srcdir)/'`init/gaussians_old.f90

gaussians_old.obj: init/gaussians_old.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gaussians_old.obj $(FCFLAGS_f90) `if test -f 'init/gaussians_old.f90'; then $(CYGPATH_W) 'init/gaussians_old.f90'; else $(CYGPATH_W) '$(srcdir)/init/gaussians_old.f90'; fi`

wfn_init.o: init/wfn_init.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o wfn_init.o $(FCFLAGS_f90) `test -f 'init/wfn_init.f90' || echo '$(srcdir)/'`init/wfn_init.f90

wfn_init.obj: init/wfn_init.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o wfn_init.obj $(FCFLAGS_f90) `if test -f 'init/wfn_init.f90'; then $(CYGPATH_W) 'init/wfn_init.f90'; else $(CYGPATH_W) '$(srcdir)/init/wfn_init.f90'; fi`

precond.o: wfn_opt/precond.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond.o $(FCFLAGS_f90) `test -f 'wfn_opt/precond.f90' || echo '$(srcdir)/'`wfn_opt/precond.f90

precond.obj: wfn_opt/precond.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/precond.f90'; then $(CYGPATH_W) 'wfn_opt/precond.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/precond.f90'; fi`

orthogonality.o: wfn_opt/orthogonality.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o orthogonality.o $(FCFLAGS_f90) `test -f 'wfn_opt/orthogonality.f90' || echo '$(srcdir)/'`wfn_opt/orthogonality.f90

orthogonality.obj: wfn_opt/orthogonality.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o orthogonality.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/orthogonality.f90'; then $(CYGPATH_W) 'wfn_opt/orthogonality.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/orthogonality.f90'; fi`

diis.o: wfn_opt/diis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o diis.o $(FCFLAGS_f90) `test -f 'wfn_opt/diis.f90' || echo '$(srcdir)/'`wfn_opt/diis.f90

diis.obj: wfn_opt/diis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o diis.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/diis.f90'; then $(CYGPATH_W) 'wfn_opt/diis.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/diis.f90'; fi`

applyh.o: wfn_opt/applyh.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o applyh.o $(FCFLAGS_f90) `test -f 'wfn_opt/applyh.f90' || echo '$(srcdir)/'`wfn_opt/applyh.f90

applyh.obj: wfn_opt/applyh.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o applyh.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/applyh.f90'; then $(CYGPATH_W) 'wfn_opt/applyh.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/applyh.f90'; fi`

potential.o: wfn_opt/potential.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potential.o $(FCFLAGS_f90) `test -f 'wfn_opt/potential.f90' || echo '$(srcdir)/'`wfn_opt/potential.f90

potential.obj: wfn_opt/potential.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potential.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/potential.f90'; then $(CYGPATH_W) 'wfn_opt/potential.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/potential.f90'; fi`

exctX.o: wfn_opt/exctX.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o exctX.o $(FCFLAGS_f90) `test -f 'wfn_opt/exctX.f90' || echo '$(srcdir)/'`wfn_opt/exctX.f90

exctX.obj: wfn_opt/exctX.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o exctX.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/exctX.f90'; then $(CYGPATH_W) 'wfn_opt/exctX.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/exctX.f90'; fi`

exctX_op2p.o: wfn_opt/exctX_op2p.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o exctX_op2p.o $(FCFLAGS_f90) `test -f 'wfn_opt/exctX_op2p.f90' || echo '$(srcdir)/'`wfn_opt/exctX_op2p.f90

exctX_op2p.obj: wfn_opt/exctX_op2p.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o exctX_op2p.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/exctX_op2p.f90'; then $(CYGPATH_W) 'wfn_opt/exctX_op2p.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/exctX_op2p.f90'; fi`

sic.o: wfn_opt/sic.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sic.o $(FCFLAGS_f90) `test -f 'wfn_opt/sic.f90' || echo '$(srcdir)/'`wfn_opt/sic.f90

sic.obj: wfn_opt/sic.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sic.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/sic.f90'; then $(CYGPATH_W) 'wfn_opt/sic.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/sic.f90'; fi`

precond_per_optim.o: wfn_opt/precond_per_optim.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond_per_optim.o $(FCFLAGS_f90) `test -f 'wfn_opt/precond_per_optim.f90' || echo '$(srcdir)/'`wfn_opt/precond_per_optim.f90

precond_per_optim.obj: wfn_opt/precond_per_optim.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond_per_optim.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/precond_per_optim.f90'; then $(CYGPATH_W) 'wfn_opt/precond_per_optim.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/precond_per_optim.f90'; fi`

precond_hyb.o: wfn_opt/precond_hyb.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond_hyb.o $(FCFLAGS_f90) `test -f 'wfn_opt/precond_hyb.f90' || echo '$(srcdir)/'`wfn_opt/precond_hyb.f90

precond_hyb.obj: wfn_opt/precond_hyb.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond_hyb.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/precond_hyb.f90'; then $(CYGPATH_W) 'wfn_opt/precond_hyb.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/precond_hyb.f90'; fi`

precond_slab.o: wfn_opt/precond_slab.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond_slab.o $(FCFLAGS_f90) `test -f 'wfn_opt/precond_slab.f90' || echo '$(srcdir)/'`wfn_opt/precond_slab.f90

precond_slab.obj: wfn_opt/precond_slab.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precond_slab.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/precond_slab.f90'; then $(CYGPATH_W) 'wfn_opt/precond_slab.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/precond_slab.f90'; fi`

kernel_per_optim.o: wfn_opt/kernel_per_optim.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kernel_per_optim.o $(FCFLAGS_f90) `test -f 'wfn_opt/kernel_per_optim.f90' || echo '$(srcdir)/'`wfn_opt/kernel_per_optim.f90

kernel_per_optim.obj: wfn_opt/kernel_per_optim.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kernel_per_optim.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/kernel_per_optim.f90'; then $(CYGPATH_W) 'wfn_opt/kernel_per_optim.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/kernel_per_optim.f90'; fi`

kernel_slab_simple.o: wfn_opt/kernel_slab_simple.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kernel_slab_simple.o $(FCFLAGS_f90) `test -f 'wfn_opt/kernel_slab_simple.f90' || echo '$(srcdir)/'`wfn_opt/kernel_slab_simple.f90

kernel_slab_simple.obj: wfn_opt/kernel_slab_simple.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kernel_slab_simple.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/kernel_slab_simple.f90'; then $(CYGPATH_W) 'wfn_opt/kernel_slab_simple.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/kernel_slab_simple.f90'; fi`

coupling_matrix.o: wfn_opt/coupling_matrix.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o coupling_matrix.o $(FCFLAGS_f90) `test -f 'wfn_opt/coupling_matrix.f90' || echo '$(srcdir)/'`wfn_opt/coupling_matrix.f90

coupling_matrix.obj: wfn_opt/coupling_matrix.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o coupling_matrix.obj $(FCFLAGS_f90) `if test -f 'wfn_opt/coupling_matrix.f90'; then $(CYGPATH_W) 'wfn_opt/coupling_matrix.f90'; else $(CYGPATH_W) '$(srcdir)/wfn_opt/coupling_matrix.f90'; fi`

etsf_fake.o: wavelib/etsf_fake.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o etsf_fake.o $(FCFLAGS_f90) `test -f 'wavelib/etsf_fake.f90' || echo '$(srcdir)/'`wavelib/etsf_fake.f90

etsf_fake.obj: wavelib/etsf_fake.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o etsf_fake.obj $(FCFLAGS_f90) `if test -f 'wavelib/etsf_fake.f90'; then $(CYGPATH_W) 'wavelib/etsf_fake.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/etsf_fake.f90'; fi`

plotting-etsf.o: wavelib/plotting-etsf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o plotting-etsf.o $(FCFLAGS_f90) `test -f 'wavelib/plotting-etsf.f90' || echo '$(srcdir)/'`wavelib/plotting-etsf.f90

plotting-etsf.obj: wavelib/plotting-etsf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o plotting-etsf.obj $(FCFLAGS_f90) `if test -f 'wavelib/plotting-etsf.f90'; then $(CYGPATH_W) 'wavelib/plotting-etsf.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/plotting-etsf.f90'; fi`

i-o-etsf.o: wavelib/i-o-etsf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o i-o-etsf.o $(FCFLAGS_f90) `test -f 'wavelib/i-o-etsf.f90' || echo '$(srcdir)/'`wavelib/i-o-etsf.f90

i-o-etsf.obj: wavelib/i-o-etsf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o i-o-etsf.obj $(FCFLAGS_f90) `if test -f 'wavelib/i-o-etsf.f90'; then $(CYGPATH_W) 'wavelib/i-o-etsf.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/i-o-etsf.f90'; fi`

transwaves.o: wavelib/transwaves.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o transwaves.o $(FCFLAGS_f90) `test -f 'wavelib/transwaves.f90' || echo '$(srcdir)/'`wavelib/transwaves.f90

transwaves.obj: wavelib/transwaves.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o transwaves.obj $(FCFLAGS_f90) `if test -f 'wavelib/transwaves.f90'; then $(CYGPATH_W) 'wavelib/transwaves.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/transwaves.f90'; fi`

scalprod.o: wavelib/scalprod.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o scalprod.o $(FCFLAGS_f90) `test -f 'wavelib/scalprod.f90' || echo '$(srcdir)/'`wavelib/scalprod.f90

scalprod.obj: wavelib/scalprod.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o scalprod.obj $(FCFLAGS_f90) `if test -f 'wavelib/scalprod.f90'; then $(CYGPATH_W) 'wavelib/scalprod.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/scalprod.f90'; fi`

plotting.o: wavelib/plotting.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o plotting.o $(FCFLAGS_f90) `test -f 'wavelib/plotting.f90' || echo '$(srcdir)/'`wavelib/plotting.f90

plotting.obj: wavelib/plotting.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o plotting.obj $(FCFLAGS_f90) `if test -f 'wavelib/plotting.f90'; then $(CYGPATH_W) 'wavelib/plotting.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/plotting.f90'; fi`

i-o.o: wavelib/i-o.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o i-o.o $(FCFLAGS_f90) `test -f 'wavelib/i-o.f90' || echo '$(srcdir)/'`wavelib/i-o.f90

i-o.obj: wavelib/i-o.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o i-o.obj $(FCFLAGS_f90) `if test -f 'wavelib/i-o.f90'; then $(CYGPATH_W) 'wavelib/i-o.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/i-o.f90'; fi`

un-compress.o: wavelib/un-compress.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o un-compress.o $(FCFLAGS_f90) `test -f 'wavelib/un-compress.f90' || echo '$(srcdir)/'`wavelib/un-compress.f90

un-compress.obj: wavelib/un-compress.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o un-compress.obj $(FCFLAGS_f90) `if test -f 'wavelib/un-compress.f90'; then $(CYGPATH_W) 'wavelib/un-compress.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/un-compress.f90'; fi`

gauss_to_daub.o: wavelib/gauss_to_daub.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gauss_to_daub.o $(FCFLAGS_f90) `test -f 'wavelib/gauss_to_daub.f90' || echo '$(srcdir)/'`wavelib/gauss_to_daub.f90

gauss_to_daub.obj: wavelib/gauss_to_daub.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gauss_to_daub.obj $(FCFLAGS_f90) `if test -f 'wavelib/gauss_to_daub.f90'; then $(CYGPATH_W) 'wavelib/gauss_to_daub.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/gauss_to_daub.f90'; fi`

daubisf.o: wavelib/daubisf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o daubisf.o $(FCFLAGS_f90) `test -f 'wavelib/daubisf.f90' || echo '$(srcdir)/'`wavelib/daubisf.f90

daubisf.obj: wavelib/daubisf.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o daubisf.obj $(FCFLAGS_f90) `if test -f 'wavelib/daubisf.f90'; then $(CYGPATH_W) 'wavelib/daubisf.f90'; else $(CYGPATH_W) '$(srcdir)/wavelib/daubisf.f90'; fi`

memoryestimator.o: profiling/memoryestimator.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o memoryestimator.o $(FCFLAGS_f90) `test -f 'profiling/memoryestimator.f90' || echo '$(srcdir)/'`profiling/memoryestimator.f90

memoryestimator.obj: profiling/memoryestimator.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o memoryestimator.obj $(FCFLAGS_f90) `if test -f 'profiling/memoryestimator.f90'; then $(CYGPATH_W) 'profiling/memoryestimator.f90'; else $(CYGPATH_W) '$(srcdir)/profiling/memoryestimator.f90'; fi`

cleanup.o: linear/cleanup.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o cleanup.o $(FCFLAGS_f90) `test -f 'linear/cleanup.f90' || echo '$(srcdir)/'`linear/cleanup.f90

cleanup.obj: linear/cleanup.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o cleanup.obj $(FCFLAGS_f90) `if test -f 'linear/cleanup.f90'; then $(CYGPATH_W) 'linear/cleanup.f90'; else $(CYGPATH_W) '$(srcdir)/linear/cleanup.f90'; fi`

nullify.o: linear/nullify.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nullify.o $(FCFLAGS_f90) `test -f 'linear/nullify.f90' || echo '$(srcdir)/'`linear/nullify.f90

nullify.obj: linear/nullify.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nullify.obj $(FCFLAGS_f90) `if test -f 'linear/nullify.f90'; then $(CYGPATH_W) 'linear/nullify.f90'; else $(CYGPATH_W) '$(srcdir)/linear/nullify.f90'; fi`

filterModule.o: linear/filterModule.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o filterModule.o $(FCFLAGS_f90) `test -f 'linear/filterModule.f90' || echo '$(srcdir)/'`linear/filterModule.f90

filterModule.obj: linear/filterModule.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o filterModule.obj $(FCFLAGS_f90) `if test -f 'linear/filterModule.f90'; then $(CYGPATH_W) 'linear/filterModule.f90'; else $(CYGPATH_W) '$(srcdir)/linear/filterModule.f90'; fi`

communicatetypes.o: linear/communicatetypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o communicatetypes.o $(FCFLAGS_f90) `test -f 'linear/communicatetypes.f90' || echo '$(srcdir)/'`linear/communicatetypes.f90

communicatetypes.obj: linear/communicatetypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o communicatetypes.obj $(FCFLAGS_f90) `if test -f 'linear/communicatetypes.f90'; then $(CYGPATH_W) 'linear/communicatetypes.f90'; else $(CYGPATH_W) '$(srcdir)/linear/communicatetypes.f90'; fi`

misc.o: linear/misc.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o misc.o $(FCFLAGS_f90) `test -f 'linear/misc.f90' || echo '$(srcdir)/'`linear/misc.f90

misc.obj: linear/misc.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o misc.obj $(FCFLAGS_f90) `if test -f 'linear/misc.f90'; then $(CYGPATH_W) 'linear/misc.f90'; else $(CYGPATH_W) '$(srcdir)/linear/misc.f90'; fi`

getLocBasis.o: linear/getLocBasis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o getLocBasis.o $(FCFLAGS_f90) `test -f 'linear/getLocBasis.f90' || echo '$(srcdir)/'`linear/getLocBasis.f90

getLocBasis.obj: linear/getLocBasis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o getLocBasis.obj $(FCFLAGS_f90) `if test -f 'linear/getLocBasis.f90'; then $(CYGPATH_W) 'linear/getLocBasis.f90'; else $(CYGPATH_W) '$(srcdir)/linear/getLocBasis.f90'; fi`

convolutions_aux.o: linear/convolutions_aux.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o convolutions_aux.o $(FCFLAGS_f90) `test -f 'linear/convolutions_aux.f90' || echo '$(srcdir)/'`linear/convolutions_aux.f90

convolutions_aux.obj: linear/convolutions_aux.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o convolutions_aux.obj $(FCFLAGS_f90) `if test -f 'linear/convolutions_aux.f90'; then $(CYGPATH_W) 'linear/convolutions_aux.f90'; else $(CYGPATH_W) '$(srcdir)/linear/convolutions_aux.f90'; fi`

convolutions.o: linear/convolutions.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o convolutions.o $(FCFLAGS_f90) `test -f 'linear/convolutions.f90' || echo '$(srcdir)/'`linear/convolutions.f90

convolutions.obj: linear/convolutions.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o convolutions.obj $(FCFLAGS_f90) `if test -f 'linear/convolutions.f90'; then $(CYGPATH_W) 'linear/convolutions.f90'; else $(CYGPATH_W) '$(srcdir)/linear/convolutions.f90'; fi`

precondLinear.o: linear/precondLinear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precondLinear.o $(FCFLAGS_f90) `test -f 'linear/precondLinear.f90' || echo '$(srcdir)/'`linear/precondLinear.f90

precondLinear.obj: linear/precondLinear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o precondLinear.obj $(FCFLAGS_f90) `if test -f 'linear/precondLinear.f90'; then $(CYGPATH_W) 'linear/precondLinear.f90'; else $(CYGPATH_W) '$(srcdir)/linear/precondLinear.f90'; fi`

psitolocReg.o: linear/psitolocReg.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o psitolocReg.o $(FCFLAGS_f90) `test -f 'linear/psitolocReg.f90' || echo '$(srcdir)/'`linear/psitolocReg.f90

psitolocReg.obj: linear/psitolocReg.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o psitolocReg.obj $(FCFLAGS_f90) `if test -f 'linear/psitolocReg.f90'; then $(CYGPATH_W) 'linear/psitolocReg.f90'; else $(CYGPATH_W) '$(srcdir)/linear/psitolocReg.f90'; fi`

locReg_orbitals.o: linear/locReg_orbitals.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o locReg_orbitals.o $(FCFLAGS_f90) `test -f 'linear/locReg_orbitals.f90' || echo '$(srcdir)/'`linear/locReg_orbitals.f90

locReg_orbitals.obj: linear/locReg_orbitals.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o locReg_orbitals.obj $(FCFLAGS_f90) `if test -f 'linear/locReg_orbitals.f90'; then $(CYGPATH_W) 'linear/locReg_orbitals.f90'; else $(CYGPATH_W) '$(srcdir)/linear/locReg_orbitals.f90'; fi`

linearScaling.o: linear/linearScaling.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o linearScaling.o $(FCFLAGS_f90) `test -f 'linear/linearScaling.f90' || echo '$(srcdir)/'`linear/linearScaling.f90

linearScaling.obj: linear/linearScaling.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o linearScaling.obj $(FCFLAGS_f90) `if test -f 'linear/linearScaling.f90'; then $(CYGPATH_W) 'linear/linearScaling.f90'; else $(CYGPATH_W) '$(srcdir)/linear/linearScaling.f90'; fi`

energyAndForces.o: linear/energyAndForces.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o energyAndForces.o $(FCFLAGS_f90) `test -f 'linear/energyAndForces.f90' || echo '$(srcdir)/'`linear/energyAndForces.f90

energyAndForces.obj: linear/energyAndForces.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o energyAndForces.obj $(FCFLAGS_f90) `if test -f 'linear/energyAndForces.f90'; then $(CYGPATH_W) 'linear/energyAndForces.f90'; else $(CYGPATH_W) '$(srcdir)/linear/energyAndForces.f90'; fi`

initAndUtils.o: linear/initAndUtils.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o initAndUtils.o $(FCFLAGS_f90) `test -f 'linear/initAndUtils.f90' || echo '$(srcdir)/'`linear/initAndUtils.f90

initAndUtils.obj: linear/initAndUtils.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o initAndUtils.obj $(FCFLAGS_f90) `if test -f 'linear/initAndUtils.f90'; then $(CYGPATH_W) 'linear/initAndUtils.f90'; else $(CYGPATH_W) '$(srcdir)/linear/initAndUtils.f90'; fi`

sumrhoLinear.o: linear/sumrhoLinear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sumrhoLinear.o $(FCFLAGS_f90) `test -f 'linear/sumrhoLinear.f90' || echo '$(srcdir)/'`linear/sumrhoLinear.f90

sumrhoLinear.obj: linear/sumrhoLinear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sumrhoLinear.obj $(FCFLAGS_f90) `if test -f 'linear/sumrhoLinear.f90'; then $(CYGPATH_W) 'linear/sumrhoLinear.f90'; else $(CYGPATH_W) '$(srcdir)/linear/sumrhoLinear.f90'; fi`

inputguessLinear.o: linear/inputguessLinear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o inputguessLinear.o $(FCFLAGS_f90) `test -f 'linear/inputguessLinear.f90' || echo '$(srcdir)/'`linear/inputguessLinear.f90

inputguessLinear.obj: linear/inputguessLinear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o inputguessLinear.obj $(FCFLAGS_f90) `if test -f 'linear/inputguessLinear.f90'; then $(CYGPATH_W) 'linear/inputguessLinear.f90'; else $(CYGPATH_W) '$(srcdir)/linear/inputguessLinear.f90'; fi`

orthonormality.o: linear/orthonormality.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o orthonormality.o $(FCFLAGS_f90) `test -f 'linear/orthonormality.f90' || echo '$(srcdir)/'`linear/orthonormality.f90

orthonormality.obj: linear/orthonormality.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o orthonormality.obj $(FCFLAGS_f90) `if test -f 'linear/orthonormality.f90'; then $(CYGPATH_W) 'linear/orthonormality.f90'; else $(CYGPATH_W) '$(srcdir)/linear/orthonormality.f90'; fi`

orbitalOptimization.o: linear/orbitalOptimization.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o orbitalOptimization.o $(FCFLAGS_f90) `test -f 'linear/orbitalOptimization.f90' || echo '$(srcdir)/'`linear/orbitalOptimization.f90

orbitalOptimization.obj: linear/orbitalOptimization.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o orbitalOptimization.obj $(FCFLAGS_f90) `if test -f 'linear/orbitalOptimization.f90'; then $(CYGPATH_W) 'linear/orbitalOptimization.f90'; else $(CYGPATH_W) '$(srcdir)/linear/orbitalOptimization.f90'; fi`

mixdiis.o: linear/mixdiis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mixdiis.o $(FCFLAGS_f90) `test -f 'linear/mixdiis.f90' || echo '$(srcdir)/'`linear/mixdiis.f90

mixdiis.obj: linear/mixdiis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mixdiis.obj $(FCFLAGS_f90) `if test -f 'linear/mixdiis.f90'; then $(CYGPATH_W) 'linear/mixdiis.f90'; else $(CYGPATH_W) '$(srcdir)/linear/mixdiis.f90'; fi`

copyTypes.o: linear/copyTypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o copyTypes.o $(FCFLAGS_f90) `test -f 'linear/copyTypes.f90' || echo '$(srcdir)/'`linear/copyTypes.f90

copyTypes.obj: linear/copyTypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o copyTypes.obj $(FCFLAGS_f90) `if test -f 'linear/copyTypes.f90'; then $(CYGPATH_W) 'linear/copyTypes.f90'; else $(CYGPATH_W) '$(srcdir)/linear/copyTypes.f90'; fi`

de-allocate.o: linear/de-allocate.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o de-allocate.o $(FCFLAGS_f90) `test -f 'linear/de-allocate.f90' || echo '$(srcdir)/'`linear/de-allocate.f90

de-allocate.obj: linear/de-allocate.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o de-allocate.obj $(FCFLAGS_f90) `if test -f 'linear/de-allocate.f90'; then $(CYGPATH_W) 'linear/de-allocate.f90'; else $(CYGPATH_W) '$(srcdir)/linear/de-allocate.f90'; fi`

derivativeBasis.o: linear/derivativeBasis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o derivativeBasis.o $(FCFLAGS_f90) `test -f 'linear/derivativeBasis.f90' || echo '$(srcdir)/'`linear/derivativeBasis.f90

derivativeBasis.obj: linear/derivativeBasis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o derivativeBasis.obj $(FCFLAGS_f90) `if test -f 'linear/derivativeBasis.f90'; then $(CYGPATH_W) 'linear/derivativeBasis.f90'; else $(CYGPATH_W) '$(srcdir)/linear/derivativeBasis.f90'; fi`

parallelLinAlg.o: linear/parallelLinAlg.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallelLinAlg.o $(FCFLAGS_f90) `test -f 'linear/parallelLinAlg.f90' || echo '$(srcdir)/'`linear/parallelLinAlg.f90

parallelLinAlg.obj: linear/parallelLinAlg.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallelLinAlg.obj $(FCFLAGS_f90) `if test -f 'linear/parallelLinAlg.f90'; then $(CYGPATH_W) 'linear/parallelLinAlg.f90'; else $(CYGPATH_W) '$(srcdir)/linear/parallelLinAlg.f90'; fi`

locReg_linear.o: linear/locReg_linear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o locReg_linear.o $(FCFLAGS_f90) `test -f 'linear/locReg_linear.f90' || echo '$(srcdir)/'`linear/locReg_linear.f90

locReg_linear.obj: linear/locReg_linear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o locReg_linear.obj $(FCFLAGS_f90) `if test -f 'linear/locReg_linear.f90'; then $(CYGPATH_W) 'linear/locReg_linear.f90'; else $(CYGPATH_W) '$(srcdir)/linear/locReg_linear.f90'; fi`

communicatePotential.o: linear/communicatePotential.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o communicatePotential.o $(FCFLAGS_f90) `test -f 'linear/communicatePotential.f90' || echo '$(srcdir)/'`linear/communicatePotential.f90

communicatePotential.obj: linear/communicatePotential.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o communicatePotential.obj $(FCFLAGS_f90) `if test -f 'linear/communicatePotential.f90'; then $(CYGPATH_W) 'linear/communicatePotential.f90'; else $(CYGPATH_W) '$(srcdir)/linear/communicatePotential.f90'; fi`

hpsiortho_linear.o: linear/hpsiortho_linear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hpsiortho_linear.o $(FCFLAGS_f90) `test -f 'linear/hpsiortho_linear.f90' || echo '$(srcdir)/'`linear/hpsiortho_linear.f90

hpsiortho_linear.obj: linear/hpsiortho_linear.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hpsiortho_linear.obj $(FCFLAGS_f90) `if test -f 'linear/hpsiortho_linear.f90'; then $(CYGPATH_W) 'linear/hpsiortho_linear.f90'; else $(CYGPATH_W) '$(srcdir)/linear/hpsiortho_linear.f90'; fi`

init_collective_comms.o: linear/init_collective_comms.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o init_collective_comms.o $(FCFLAGS_f90) `test -f 'linear/init_collective_comms.f90' || echo '$(srcdir)/'`linear/init_collective_comms.f90

init_collective_comms.obj: linear/init_collective_comms.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o init_collective_comms.obj $(FCFLAGS_f90) `if test -f 'linear/init_collective_comms.f90'; then $(CYGPATH_W) 'linear/init_collective_comms.f90'; else $(CYGPATH_W) '$(srcdir)/linear/init_collective_comms.f90'; fi`

optimize_coeffs.o: linear/optimize_coeffs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o optimize_coeffs.o $(FCFLAGS_f90) `test -f 'linear/optimize_coeffs.f90' || echo '$(srcdir)/'`linear/optimize_coeffs.f90

optimize_coeffs.obj: linear/optimize_coeffs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o optimize_coeffs.obj $(FCFLAGS_f90) `if test -f 'linear/optimize_coeffs.f90'; then $(CYGPATH_W) 'linear/optimize_coeffs.f90'; else $(CYGPATH_W) '$(srcdir)/linear/optimize_coeffs.f90'; fi`

foe.o: linear/foe.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o foe.o $(FCFLAGS_f90) `test -f 'linear/foe.f90' || echo '$(srcdir)/'`linear/foe.f90

foe.obj: linear/foe.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o foe.obj $(FCFLAGS_f90) `if test -f 'linear/foe.f90'; then $(CYGPATH_W) 'linear/foe.f90'; else $(CYGPATH_W) '$(srcdir)/linear/foe.f90'; fi`

chebyshev.o: linear/chebyshev.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o chebyshev.o $(FCFLAGS_f90) `test -f 'linear/chebyshev.f90' || echo '$(srcdir)/'`linear/chebyshev.f90

chebyshev.obj: linear/chebyshev.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o chebyshev.obj $(FCFLAGS_f90) `if test -f 'linear/chebyshev.f90'; then $(CYGPATH_W) 'linear/chebyshev.f90'; else $(CYGPATH_W) '$(srcdir)/linear/chebyshev.f90'; fi`

communications_onesided.o: linear/communications_onesided.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o communications_onesided.o $(FCFLAGS_f90) `test -f 'linear/communications_onesided.f90' || echo '$(srcdir)/'`linear/communications_onesided.f90

communications_onesided.obj: linear/communications_onesided.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o communications_onesided.obj $(FCFLAGS_f90) `if test -f 'linear/communications_onesided.f90'; then $(CYGPATH_W) 'linear/communications_onesided.f90'; else $(CYGPATH_W) '$(srcdir)/linear/communications_onesided.f90'; fi`

sparse_matrices.o: linear/sparse_matrices.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sparse_matrices.o $(FCFLAGS_f90) `test -f 'linear/sparse_matrices.f90' || echo '$(srcdir)/'`linear/sparse_matrices.f90

sparse_matrices.obj: linear/sparse_matrices.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sparse_matrices.obj $(FCFLAGS_f90) `if test -f 'linear/sparse_matrices.f90'; then $(CYGPATH_W) 'linear/sparse_matrices.f90'; else $(CYGPATH_W) '$(srcdir)/linear/sparse_matrices.f90'; fi`

abscalc-abscalc.o: abscalc.f90
	$(FC) $(abscalc_FCFLAGS) $(FCFLAGS) -c -o abscalc-abscalc.o $(FCFLAGS_f90) `test -f 'abscalc.f90' || echo '$(srcdir)/'`abscalc.f90

abscalc-abscalc.obj: abscalc.f90
	$(FC) $(abscalc_FCFLAGS) $(FCFLAGS) -c -o abscalc-abscalc.obj $(FCFLAGS_f90) `if test -f 'abscalc.f90'; then $(CYGPATH_W) 'abscalc.f90'; else $(CYGPATH_W) '$(srcdir)/abscalc.f90'; fi`

bart-art.o: art.f90
	$(FC) $(bart_FCFLAGS) $(FCFLAGS) -c -o bart-art.o $(FCFLAGS_f90) `test -f 'art.f90' || echo '$(srcdir)/'`art.f90

bart-art.obj: art.f90
	$(FC) $(bart_FCFLAGS) $(FCFLAGS) -c -o bart-art.obj $(FCFLAGS_f90) `if test -f 'art.f90'; then $(CYGPATH_W) 'art.f90'; else $(CYGPATH_W) '$(srcdir)/art.f90'; fi`

MPIfake.o: $(top_srcdir)/flib/src/MPIfake.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o MPIfake.o $(FCFLAGS_f90) `test -f '$(top_srcdir)/flib/src/MPIfake.f90' || echo '$(srcdir)/'`$(top_srcdir)/flib/src/MPIfake.f90

MPIfake.obj: $(top_srcdir)/flib/src/MPIfake.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o MPIfake.obj $(FCFLAGS_f90) `if test -f '$(top_srcdir)/flib/src/MPIfake.f90'; then $(CYGPATH_W) '$(top_srcdir)/flib/src/MPIfake.f90'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/flib/src/MPIfake.f90'; fi`
install-dynlibDATA: $(dynlib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dynlibdir)" || $(MKDIR_P) "$(DESTDIR)$(dynlibdir)"
	@list='$(dynlib_DATA)'; test -n "$(dynlibdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dynlibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dynlibdir)" || exit $$?; \
	done

uninstall-dynlibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dynlib_DATA)'; test -n "$(dynlibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dynlibdir)'; $(am__uninstall_files_from_dir)
install-girDATA: $(gir_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(girdir)" || $(MKDIR_P) "$(DESTDIR)$(girdir)"
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(girdir)'; $(am__uninstall_files_from_dir)
install-moduleDATA: $(module_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(moduledir)" || $(MKDIR_P) "$(DESTDIR)$(moduledir)"
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(moduledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(moduledir)" || exit $$?; \
	done

uninstall-moduleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(moduledir)'; $(am__uninstall_files_from_dir)
install-typelibsDATA: $(typelibs_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(typelibsdir)" || $(MKDIR_P) "$(DESTDIR)$(typelibsdir)"
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibsdir)" || exit $$?; \
	done

uninstall-typelibsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibsdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(dynlibdir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(typelibsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-local clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dynlibDATA install-girDATA install-moduleDATA \
	install-typelibsDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dynlibDATA uninstall-girDATA uninstall-libLIBRARIES \
	uninstall-moduleDATA uninstall-typelibsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-data-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES clean-local \
	clean-noinstLIBRARIES clean-noinstPROGRAMS ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-data-hook install-dvi \
	install-dvi-am install-dynlibDATA install-exec install-exec-am \
	install-girDATA install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man \
	install-moduleDATA install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-typelibsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-dynlibDATA uninstall-girDATA \
	uninstall-libLIBRARIES uninstall-moduleDATA \
	uninstall-typelibsDATA


input_variables_description.o: input_variables_definition-inc.h
#build the fortran include file with the stream of input variables into a local string
#should we check (AC_CHECK_PROG) if sed and echo are available?
#the sed command below will transform the entire yaml document into a fortran string
input_variables_definition-inc.h: input_variables_definition.yaml
	$(SED) -e "s/^/\"/;s/$$/\\\n\"/" $< > $@

tmp-libbigdft/extract.stamp: $(subs_static_library) $(out_static_library)
	test -e "tmp-libbigdft" || $(INSTALL) -d -m 755 tmp-libbigdft
	cd tmp-libbigdft ; \
	rm -f *; \
	for lib in $^; do \
	  $(AR) x ../$$lib ; \
	done ; \
	touch extract.stamp

libbigdft-1.a: $(libmain_a_OBJECTS) tmp-libbigdft/extract.stamp
	$(AR) $(ARFLAGS) $@ $(libmain_a_OBJECTS) tmp-libbigdft/*.o
	$(RANLIB) $@

$(bigdft_dynamic_library): $(libmain_a_OBJECTS) tmp-libbigdft/extract.stamp
	$(FC) $(FCFLAGS) -shared $(LDFLAGS) -Wl,-soname=$(bigdft_library) -o $@ $(libmain_a_OBJECTS) tmp-libbigdft/*.o -labinit -L/gpfs/home/chuang3/XCEP_codes/abinit-7.10.4_xcep_v2pbc/fallbacks/exports/lib -lxc     -llapack -lblas  $(top_builddir)/yaml-0.1.4/src/.libs/libyaml.a   
	@chmod a+x $@

libbigdft-1.so.7: $(bigdft_dynamic_library)
	ln -fs $^ $@
	ln -fs $@ libbigdft-1.so

install-data-hook:
	if test -n "$(bigdft_dynamic_library)" ; then \
	  cd $(DESTDIR)$(dynlibdir) ; \
	  chmod a+x $(bigdft_dynamic_library) ; \
	  ln -fs $(bigdft_dynamic_library) $(bigdft_library) ; \
	  ln -fs $(bigdft_library) libbigdft-1.so ; \
	fi
clean-local:
	rm -rf tmp-libbigdft

all: all-recursive
	chmod ug+x bigdft-tool

check:
	@if test $(MAKELEVEL) = 0 ; then python $(top_srcdir)/tests/report.py ; fi

#dependencies
convolutions_aux.o linear/convolutions_aux.o: linear/filterModule.f90 filterModule.o

cluster.o geometry.o xabsorber.o: esatto.o scfloop_API.o

abscalc.o : esatto.o

lanczos.o : lanczos_base.o lanczos_interface.o

xabsorber.o init/xabsorber.o : init/xabsorber.f90 esatto.o

geometry.o bfgs.o sdcg.o: lbfgs.o

initAndUtils.o linear/initAndUtils.o: linear/initAndUtils.f90 cleanup.o

NEB.o: images.o

#$(gir_DATA): $(G_IR_SCANNER) $(bigdft_library)
#	$(G_IR_SCANNER) -v --warn-all \
#		--namespace BigDFT \
#		--symbol-prefix=bigdft --identifier-prefix=BigDFT_ \
#		--symbol-prefix=f90 --identifier-prefix=f90_ \
#		--nsversion "1.7" \
#		--add-include-path=$(girdir) \
#		--include GObject-2.0 \
#		--include GLib-2.0 \
#		--include Gio-2.0 \
#		--output=$(gir_DATA) \
#		--library=bigdft-1 \
#		--no-libtool \
#		-DGLIB_MAJOR_VERSION=2 -L$(builddir) \
#		-I$(srcdir)/modules -I$(builddir)/modules \
#		$(srcdir)/modules/bigdft.h \
#		$(srcdir)/modules/bigdft_input_keys.h \
#		$(builddir)/modules/bigdft_cst.h \
#		$(srcdir)/bindings/wrappers.c \
#		$(srcdir)/bindings/wrapper_inputs.c \
#		$(srcdir)/bindings/wrapper_run.c \
#		$(srcdir)/bindings/wrapper_neb.c \
#		$(srcdir)/bindings/wrapper_atoms.c

#$(typelibs_DATA): $(gir_DATA) $(G_IR_COMPILER)
#	$(G_IR_COMPILER) \
#		--includedir=. \
#		--verbose \
#		-o $(typelibs_DATA) \
#		$(gir_DATA)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
