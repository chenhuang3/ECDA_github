GFORTRAN module version '10' created from yaml_strings.f90
MD5:c0148a2f34851b46e8a698851f742e91 -- If you edit this, you'll get what you deserve.

(() () () () () () () () () () () () () () () () () () () () () () () ()
() () ())

()

(('yaml_toa' 'yaml_strings' 2 3 4 5 6 7 8 9 10 11 12 13 14))

()

()

()

(15 'align_message' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 SUBROUTINE IMPLICIT_PURE) (UNKNOWN 0 0 0 0
UNKNOWN ()) 16 0 (17 18 19 20 21) () 0 () () () 0 0)
22 'buffer_string' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 SUBROUTINE PURE ALWAYS_EXPLICIT) (UNKNOWN 0
0 0 0 UNKNOWN ()) 23 0 (24 25 26 27 28 29) () 0 () () () 0 0)
30 'shiftstr' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
DECL UNKNOWN 0 0 SUBROUTINE PURE) (UNKNOWN 0 0 0 0 UNKNOWN ()) 31 0 (32
33) () 0 () () () 0 0)
34 'yaml_date_and_time_toa' 'yaml_strings' '' 1 ((PROCEDURE
UNKNOWN-INTENT MODULE-PROC DECL UNKNOWN 0 0 FUNCTION ALWAYS_EXPLICIT) (
CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35
()))) 36 0 (37 38) () 34 () () () 0 0)
39 'yaml_date_toa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION ALWAYS_EXPLICIT) (CHARACTER 1 0 0
0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 40 0 (41)
() 39 () () () 0 0)
42 'yaml_time_toa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION ALWAYS_EXPLICIT) (CHARACTER 1 0 0
0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 43 0 (44)
() 42 () () () 0 0)
2 'yaml_rvtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 45 0
(46 47) () 48 () () () 0 0)
3 'yaml_lvtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 49 0
(50 51) () 52 () () () 0 0)
4 'yaml_zvtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 53 0
(54 55) () 56 () () () 0 0)
5 'yaml_ztoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0
CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 57 0 (58 59)
() 5 () () () 0 0)
6 'yaml_cvtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 60 0
(61 62) () 63 () () () 0 0)
7 'yaml_ivtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 64 0
(65 66) () 67 () () () 0 0)
8 'yaml_dvtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 68 0
(69 70) () 71 () () () 0 0)
9 'yaml_ctoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0
CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 72 0 (73 74)
() 9 () () () 0 0)
10 'yaml_ltoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 75 0
(76 77) () 10 () () () 0 0)
11 'yaml_dtoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 78 0
(79 80) () 81 () () () 0 0)
12 'yaml_ftoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 82 0
(83 84) () 85 () () () 0 0)
13 'yaml_litoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 86 0
(87 88) () 89 () () () 0 0)
14 'yaml_itoa' 'yaml_strings' '' 1 ((PROCEDURE UNKNOWN-INTENT
MODULE-PROC DECL UNKNOWN 0 0 FUNCTION PURE ALWAYS_EXPLICIT) (CHARACTER 1
0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 90 0
(91 92) () 93 () () () 0 0)
17 'rigid' '' '' 16 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY)
(LOGICAL 4 0 0 0 LOGICAL ()) 0 0 () () 0 () () () 0 0)
18 'maxlen' '' '' 16 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
19 'tabval' '' '' 16 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
20 'anchor' '' '' 16 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () () 0 0)
21 'message' '' '' 16 ((VARIABLE INOUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER
()) 0 18 ()))) 0 0 () () 0 () () () 0 0)
24 'string' '' '' 23 ((VARIABLE INOUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (INTEGER 4 0 0 0 INTEGER
()) 0 25 ()))) 0 0 () () 0 () () () 0 0)
25 'string_lgt' '' '' 23 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
26 'buffer' '' '' 23 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () () 0 0)
27 'string_pos' '' '' 23 ((VARIABLE INOUT UNKNOWN-PROC UNKNOWN UNKNOWN 0
0 DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
28 'back' '' '' 23 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (LOGICAL 4 0 0 0 LOGICAL ()) 0 0 () () 0 () () () 0 0)
29 'istat' '' '' 23 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
32 'str' '' '' 31 ((VARIABLE INOUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () () 0 0)
33 'n' '' '' 31 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY) (
INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
35 'max_value_length' 'yaml_strings' '' 1 ((VARIABLE UNKNOWN-INTENT
UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0
() () 0 () () () 0 0)
37 'values' '' '' 36 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION OPTIONAL DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (1 0
EXPLICIT (CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') (CONSTANT (
INTEGER 4 0 0 0 INTEGER ()) 0 '8')) 0 () () () 0 0)
38 'zone' '' '' 36 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (LOGICAL 4 0 0 0 LOGICAL ()) 0 0 () () 0 () () () 0 0)
41 'values' '' '' 40 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION OPTIONAL DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (1 0
EXPLICIT (CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') (CONSTANT (
INTEGER 4 0 0 0 INTEGER ()) 0 '8')) 0 () () () 0 0)
44 'values' '' '' 43 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION OPTIONAL DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (1 0
EXPLICIT (CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') (CONSTANT (
INTEGER 4 0 0 0 INTEGER ()) 0 '8')) 0 () () () 0 0)
46 'vec' '' '' 45 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION DUMMY) (REAL 4 0 0 0 REAL ()) 0 0 () (1 0 ASSUMED_SHAPE (
CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') ()) 0 () () () 0 0)
47 'fmt' '' '' 45 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
48 'vec_toa' '' '' 45 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
UNKNOWN 0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((
VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0
0)
50 'vec' '' '' 49 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION DUMMY) (LOGICAL 4 0 0 0 LOGICAL ()) 0 0 () (1 0 ASSUMED_SHAPE
(CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') ()) 0 () () () 0 0)
51 'fmt' '' '' 49 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
52 'vec_toa' '' '' 49 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
UNKNOWN 0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((
VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0
0)
54 'vec' '' '' 53 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION DUMMY) (COMPLEX 8 0 0 0 COMPLEX ()) 0 0 () (1 0 ASSUMED_SHAPE
(CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') ()) 0 () () () 0 0)
55 'fmt' '' '' 53 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
56 'vec_toa' '' '' 53 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
UNKNOWN 0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((
VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0
0)
58 'z' '' '' 57 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY) (
COMPLEX 8 0 0 0 COMPLEX ()) 0 0 () () 0 () () () 0 0)
59 'fmt' '' '' 57 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
61 'vec' '' '' 60 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () (1 0
ASSUMED_SHAPE (CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') ()) 0 () ()
() 0 0)
62 'fmt' '' '' 60 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
63 'vec_toa' '' '' 60 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
UNKNOWN 0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((
VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0
0)
65 'vec' '' '' 64 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION DUMMY) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (1 0 ASSUMED_SHAPE
(CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') ()) 0 () () () 0 0)
66 'fmt' '' '' 64 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
67 'vec_toa' '' '' 64 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
UNKNOWN 0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((
VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0
0)
69 'vec' '' '' 68 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
DIMENSION DUMMY) (REAL 8 0 0 0 REAL ()) 0 0 () (1 0 ASSUMED_SHAPE (
CONSTANT (INTEGER 4 0 0 0 INTEGER ()) 0 '1') ()) 0 () () () 0 0)
70 'fmt' '' '' 68 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
71 'vec_toa' '' '' 68 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
UNKNOWN 0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((
VARIABLE (INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0
0)
73 'd' '' '' 72 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY) (
CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () () 0 0)
74 'fmt' '' '' 72 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
76 'l' '' '' 75 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY) (
LOGICAL 4 0 0 0 LOGICAL ()) 0 0 () () 0 () () () 0 0)
77 'fmt' '' '' 75 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
79 'data' '' '' 78 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY)
(REAL 8 0 0 0 REAL ()) 0 0 () () 0 () () () 0 0)
80 'fmt' '' '' 78 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
81 'str' '' '' 78 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (
INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0 0)
83 'data' '' '' 82 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY)
(REAL 4 0 0 0 REAL ()) 0 0 () () 0 () () () 0 0)
84 'fmt' '' '' 82 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
85 'str' '' '' 82 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (
INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0 0)
87 'data' '' '' 86 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY)
(INTEGER 8 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
88 'fmt' '' '' 86 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
89 'str' '' '' 86 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (
INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0 0)
91 'data' '' '' 90 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 DUMMY)
(INTEGER 4 0 0 0 INTEGER ()) 0 0 () () 0 () () () 0 0)
92 'fmt' '' '' 90 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
OPTIONAL DUMMY) (CHARACTER 1 0 0 0 CHARACTER (())) 0 0 () () 0 () () ()
0 0)
93 'str' '' '' 90 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
0 0 RESULT ALWAYS_EXPLICIT) (CHARACTER 1 0 0 0 CHARACTER ((VARIABLE (
INTEGER 4 0 0 0 INTEGER ()) 0 35 ()))) 0 0 () () 0 () () () 0 0)
)

('align_message' 0 15 'buffer_string' 0 22 'shiftstr' 0 30
'yaml_date_and_time_toa' 0 34 'yaml_date_toa' 0 39 'yaml_time_toa' 0 42)
